buildscript {
    ext {
        // ext키워드는 bulid.gradle에서 사용하는 전역변수를 설정
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        // 각존 의존성 (라이브러리)들을 어떤 원격 저장소에서 받을지 정한다.
        // 기본적으로 mavenCentral 을 사용하나 라이브러리 업로드 난이도 때문에 jcenter도 이용
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 이하 플러그인 중 io.spring.dependency-management 은 스프링부트의 의존성을 관리해 주는 플러그인이라 꼭 추가해야한다.
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

// 각존 의존성들을 어떤 원격 저장소에서 받을지 정한다.
repositories {
    mavenCentral()
    jcenter()
}

// 프로젝트 개발에 필요한 의존성들을 선언하는 곳이다.
// 여기서 특정 버전을 명시하지 않아야한다. 그래야 맨 위에 작성한 버전을 따라간다.
// org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-mustache')
    compile('com.h2database:h2')

    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    compile('org.springframework.session:spring-session-jdbc')

    compile("org.mariadb.jdbc:mariadb-java-client")

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.springframework.security:spring-security-test")
}